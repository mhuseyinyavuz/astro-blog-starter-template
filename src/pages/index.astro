---
import { FaYoutube, FaInstagram, FaLink } from "react-icons/fa";
import QRCode from "qrcode.react";
---

<html lang="tr" class="light">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Tech101 Linktree</title>
    <script>
      // Dark mode toggle
      function toggleMode() {
        const html = document.documentElement;
        if (html.classList.contains("light")) {
          html.classList.remove("light");
          html.classList.add("dark");
        } else {
          html.classList.remove("dark");
          html.classList.add("light");
        }
      }
    </script>
    <style>
      body {
        margin: 0;
        font-family: system-ui, sans-serif;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
        transition: background 0.5s ease;
      }

      .light body {
        background: linear-gradient(270deg, red, orange, yellow, green, blue, indigo, violet);
        background-size: 1400% 1400%;
        animation: rainbow 30s ease infinite;
        color: black;
      }

      .dark body {
        background: black;
        color: white;
      }

      @keyframes rainbow {
        0% { background-position: 0% 50%; }
        50% { background-position: 100% 50%; }
        100% { background-position: 0% 50%; }
      }

      .profile {
        text-align: center;
        margin-bottom: 20px;
        z-index: 10;
      }

      .profile img {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        border: 4px solid white;
        margin-bottom: 10px;
      }

      .bio {
        margin-top: 10px;
        font-size: 16px;
        line-height: 1.6;
      }

      .links {
        display: flex;
        flex-direction: column;
        gap: 15px;
        width: 100%;
        max-width: 300px;
        z-index: 10;
      }

      .button {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 10px;
        padding: 15px;
        border-radius: 12px;
        background: rgba(255,255,255,0.2);
        backdrop-filter: blur(10px);
        color: white;
        font-size: 18px;
        text-decoration: none;
        transition: transform 0.2s ease, background 0.3s ease;
      }

      .button span {
        margin-left: auto;
        font-size: 14px;
        opacity: 0.8;
      }

      .button:hover {
        background: rgba(255,255,255,0.3);
        transform: scale(1.05);
      }

      .dark .button {
        background: rgba(0,255,0,0.2);
        color: #0f0;
      }

      .dark .button:hover {
        background: rgba(0,255,0,0.3);
      }

      .mode-toggle {
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 10px 15px;
        border: none;
        border-radius: 8px;
        background: white;
        cursor: pointer;
        z-index: 100;
      }

      .dark .mode-toggle {
        background: #111;
        color: #0f0;
        border: 1px solid #0f0;
      }

      .total-clicks {
        margin-top: 20px;
        font-weight: bold;
        font-size: 16px;
      }

      /* QR Modal */
      .modal {
        position: fixed;
        inset: 0;
        display: none;
        align-items: center;
        justify-content: center;
        background: rgba(0,0,0,0.6);
        z-index: 200;
      }

      .modal.active {
        display: flex;
      }

      .modal-content {
        background: white;
        padding: 20px;
        border-radius: 12px;
        text-align: center;
      }

      .dark .modal-content {
        background: #111;
        color: white;
      }

      /* Matrix effect */
      canvas#matrix {
        position: fixed;
        inset: 0;
        z-index: 0;
        display: none;
      }

      .dark canvas#matrix {
        display: block;
      }
    </style>
  </head>
  <body>
    <button class="mode-toggle" onclick="toggleMode()">üåô/‚òÄÔ∏è</button>

    <div class="profile">
      <img src="https://i.pravatar.cc/300?img=68" alt="Profile" />
      <h2>Muhammed</h2>
      <div class="bio">
        ‚ö° Elektrik-Elektronik M√ºhendisi <br/>
        üíª Developer <br/>
        üì± Teknoloji A≈üƒ±ƒüƒ± <br/>
        üé• Youtuber
      </div>
    </div>

    <div class="links">
      <a href="https://www.youtube.com/@Tech101TR" target="_blank" class="button" onclick="increment('youtube')">
        <FaYoutube /> YouTube <span id="count-youtube">0</span>
      </a>
      <a href="https://instagram.com/mhuseyinyavuz" target="_blank" class="button" onclick="increment('instagram')">
        <FaInstagram /> Instagram <span id="count-instagram">0</span>
      </a>
      <a href="https://example.com" target="_blank" class="button" onclick="increment('website')">
        <FaLink /> Website <span id="count-website">0</span>
      </a>
      <button class="button" onclick="document.getElementById('qrModal').classList.add('active')">
        üì± QR Kod
      </button>
    </div>

    <div class="total-clicks">
      Toplam Tƒ±klama: <span id="total-clicks">0</span>
    </div>

    <!-- QR Modal -->
    <div id="qrModal" class="modal" onclick="this.classList.remove('active')">
      <div class="modal-content" onclick="event.stopPropagation()">
        <h3>Sayfanƒ±n QR Kodu</h3>
        <QRCode value="https://yourdomain.com" size={200} />
      </div>
    </div>

    <!-- Matrix effect canvas -->
    <canvas id="matrix"></canvas>

    <script>
      // LocalStorage click counters
      const counters = {
        youtube: parseInt(localStorage.getItem("count-youtube") || "0"),
        instagram: parseInt(localStorage.getItem("count-instagram") || "0"),
        website: parseInt(localStorage.getItem("count-website") || "0"),
      };

      function renderCounts() {
        document.getElementById("count-youtube").innerText = counters.youtube;
        document.getElementById("count-instagram").innerText = counters.instagram;
        document.getElementById("count-website").innerText = counters.website;
        document.getElementById("total-clicks").innerText =
          counters.youtube + counters.instagram + counters.website;
      }

      function increment(key) {
        counters[key]++;
        localStorage.setItem("count-" + key, counters[key]);
        renderCounts();
      }

      renderCounts();

      // Matrix effect
      const canvas = document.getElementById("matrix");
      const ctx = canvas.getContext("2d");

      function resizeCanvas() {
        canvas.height = window.innerHeight;
        canvas.width = window.innerWidth;
      }
      window.addEventListener("resize", resizeCanvas);
      resizeCanvas();

      const letters = Array(256).join("1").split("");
      function drawMatrix() {
        ctx.fillStyle = "rgba(0,0,0,0.05)";
        ctx.fillRect(0, 0, canvas.width, canvas.height);
        ctx.fillStyle = "#0F0";
        letters.map((y_pos, index) => {
          const text = String.fromCharCode(3e4 + Math.random() * 33);
          const x = index * 10;
          ctx.fillText(text, x, y_pos);
          if (y_pos > 100 + Math.random() * 1e4) letters[index] = 0;
          else letters[index] = y_pos + 10;
        });
      }
      setInterval(drawMatrix, 60);
    </script>
  </body>
</html>
